
services:
  lb:
    build: .
    image: testcloud:latest
    container_name: load_balancer
    depends_on:
      postgres:
        condition: service_healthy
    environment:

      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: user
      DB_PASSWORD: secret
      DB_NAME: postgres_db
    ports:
      - "8040:8040"
    networks:
      - backend_network
    healthcheck:
      test: [ "CMD-SHELL", "wget -qO- http://localhost:8040/health || exit 1" ]
      interval: 10s
      timeout: 3s
      retries: 5
  postgres:
    image: postgres:latest
    container_name: postgres_cont
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: postgres_db
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5430:5432"
    volumes:
      - ./pgdata:/var/lib/postgresql/data/pgdata
    networks:
      - backend_network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user -d postgres_db" ]
      interval: 5s
      retries: 5
      start_period: 10s

  prometheus:
    image: prom/prometheus:v2.52.0
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
  # ---------- backend-заглушки (если ещё нужны) ----------
  # Лучше взять свежий тег:
  appEcho:
    image: ealen/echo-server:0.9.2
    ports: [ "3000:80" ]

  # ---------- наши Go-серверы ----------
  app1:
    build: ./TestServers        # <-- строим образ
    image: testservers:latest   # сохранится под этим тегом
    environment:
      BIN: testServer1
    expose: [ "9001" ]
    networks: [ backend_network ]

  app2:
    image: testservers:latest   # готовый образ, пересборка не нужна
    environment: { BIN: testServer2 }
    expose: [ "9002" ]
    networks: [ backend_network ]

  app3:
    image: testservers:latest
    environment: { BIN: testServer3 }
    expose: [ "9003" ]
    networks: [ backend_network ]

  app4:
    image: testservers:latest
    environment: { BIN: testServer4 }
    expose: [ "9004" ]
    networks: [ backend_network ]
  app5:
    image: testservers:latest
    environment: { BIN: testServer4 }
    expose: [ "9005" ]
    networks: [ backend_network ]
networks:
  backend_network:
    driver: bridge
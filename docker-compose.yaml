
services:
  postgres:
    image: postgres:latest
    container_name: postgres_container
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: postgres_db
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5430:5432"
    volumes:
      - ./pgdata:/var/lib/postgresql/data/pgdata
    networks:
      - backend_network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user -d postgres_db" ]
      interval: 5s
      retries: 5
      start_period: 10s

  redis:
    image: redis:latest
    container_name: redis_container
    ports:
      - "6379:6379"
    networks:
      - backend_network

  grpc_service_1:
    build: .
    container_name: grpc_service_1
    environment:
        - GRPC_PORT=50051
    ports:
      - "50051:50051"
    networks:
      - backend_network
    depends_on:
      postgres:
        condition: service_healthy
  grpc_service_2:
    build: .
    container_name: grpc_service_2
    environment:
      - GRPC_PORT=50052
    ports:
      - "50052:50052"
    networks:
      - backend_network
    depends_on:
      postgres:
        condition: service_healthy
  grpc_service_3:
    build: .
    container_name: grpc_service_3
    environment:
      - GRPC_PORT=50053
    ports:
      - "50053:50053"
    networks:
      - backend_network
    depends_on:
      postgres:
        condition: service_healthy

  nginx:
    image: nginx:latest
    container_name: nginx_balancer
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - grpc_service_1
      - grpc_service_2
      - grpc_service_3
    networks:
      - backend_network


networks:
  backend_network:
    driver: bridge